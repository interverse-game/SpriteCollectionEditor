<Window x:Name="root" x:Class="TML.SpriteCollectionEditor.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:local="clr-namespace:TML.SpriteCollectionEditor"
		mc:Ignorable="d"
		Title="Sprite Collection Editor" Height="440" Width="700"
		WindowStartupLocation="CenterScreen"
		DataContext="{Binding RelativeSource={RelativeSource Self}}">

	<Window.Resources>
		<Style x:Key="MarinedProperty" TargetType="FrameworkElement">
			<Setter Property="Margin" Value="2"/>
		</Style>
		<local:PercentageConverter x:Key="PercentageConverter"/>
	</Window.Resources>

    <Window.InputBindings>
        <KeyBinding Key="N" Modifiers="Control" 
                    CommandParameter="{Binding}"
                    Command="{Binding FileNewCommand}"/>
        <KeyBinding Key="O" Modifiers="Control" 
                    CommandParameter="{Binding}"
                    Command="{Binding FileOpenCommand}"/>
        <KeyBinding Key="S" Modifiers="Control" 
                    CommandParameter="{Binding}"
                    Command="{Binding FileSaveCommand}"/>
    </Window.InputBindings>

    <DockPanel>
		<Menu DockPanel.Dock="Top">
			<MenuItem Header="_File">
				<MenuItem Header="_New" 
                          InputGestureText="Ctrl+N"
						  CommandParameter="{Binding}"
						  Command="{Binding FileNewCommand}"/>
				<MenuItem Header="_Open..." 
                          InputGestureText="Ctrl+O"
						  CommandParameter="{Binding}"
						  Command="{Binding FileOpenCommand}"/>
				<MenuItem Header="_Save As..." 
                          InputGestureText="Ctrl+S"
						  CommandParameter="{Binding}"
						  Command="{Binding FileSaveCommand}"/>
				<Separator/>
				<MenuItem Header="E_xit" 
						  CommandParameter="{Binding}"
						  Command="{Binding ExitCommand}"/>
			</MenuItem>
			<MenuItem Header="_Configure" 
					  CommandParameter="{Binding}"
					  Command="{Binding ConfigCommand}"/>
			<MenuItem Header="_About" 
					  CommandParameter="{Binding}"
					  Command="{Binding AboutCommand}"/>
		</Menu>

		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="3*"/>
				<ColumnDefinition Width="4"/>
				<ColumnDefinition Width="7*"/>
			</Grid.ColumnDefinitions>

			<!-- Left -->
			<DockPanel Grid.Column="0">
				<DockPanel DockPanel.Dock="Top" Margin="5,5,5,5">
					<Button Content="+ Group" DockPanel.Dock="Right" HorizontalAlignment="Right"
							CommandParameter="{Binding}"
							Command="{Binding AddGroupCommand}" Padding="6,3,6,3"/>
                    <TextBox Text="{Binding InputGroupId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             Margin="0,0,5,0" VerticalContentAlignment="Center">
                        <TextBox.InputBindings>
                            <KeyBinding Key="Return"
                                        CommandParameter="{Binding}"
                                        Command="{Binding AddGroupCommand}"/>
                        </TextBox.InputBindings>
                    </TextBox>
				</DockPanel>
				<ListView x:Name="groupList" ItemsSource="{Binding Groups.Ids}" SelectionChanged="ListView_SelectionChanged" Margin="5,0,5,5">
					<ListView.Resources>
						<ContextMenu x:Key="ItemContextMenu">
							<MenuItem Header="Remove" 
									  DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"
									  CommandParameter="{Binding}"
									  Command="{Binding GroupListRemoveCommand}"/>
						</ContextMenu>
					</ListView.Resources>
					<ListView.ItemContainerStyle>
						<Style TargetType="{x:Type ListViewItem}">
							<Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
						</Style>
					</ListView.ItemContainerStyle>
				</ListView>
			</DockPanel>

			<GridSplitter Grid.Column="1" HorizontalAlignment="Stretch"/>

			<!-- Right -->
			<ScrollViewer Grid.Column="2" VerticalScrollBarVisibility="Auto">
				<Grid Visibility="{Binding ElementName=root, Path=GroupEditorVisiblity}" DataContext="{Binding CurrentGroup}" Margin="5,5,5,5">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition/>
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>

					<Label Grid.Row="0" Grid.Column="0" Content="Id"/>
                    <TextBox x:Name="textboxGroupId" Grid.Row="0" Grid.Column="1" Style="{StaticResource MarinedProperty}"
							 VerticalContentAlignment="Center">
                        <TextBox.InputBindings>
                            <KeyBinding Key="Return"
                                        CommandParameter="{Binding ElementName=root}"
                                        Command="{Binding ElementName=root, Path=ConfirmGroupIdCommand}"/>
                        </TextBox.InputBindings>
                        <TextBox.Resources>
                            <local:BindingProxy x:Key="Proxy" Data="{Binding ElementName=root}"/>
                        </TextBox.Resources>
                        <TextBox.Text>
                            <Binding Path="Id" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                                <Binding.ValidationRules>
                                    <local:GroupIdRule>
                                        <local:GroupIdRule.Wrapper>
                                            <local:GroupIdRuleWrapper Window="{Binding Source={StaticResource Proxy}, Path=Data}"/>
                                        </local:GroupIdRule.Wrapper>
                                    </local:GroupIdRule>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <StackPanel Grid.Row="1" Grid.Column="0">
						<Label Content="Textures" DockPanel.Dock="Top"/>
						<Button Content="+" Width="44" MinHeight="40" HorizontalAlignment="Right" Margin="0,0,2,1"
								CommandParameter="{Binding ElementName=root}"
								Command="{Binding ElementName=root, Path=AddTextureCommand}"/>
						<Button Content=">_" Width="44" MinHeight="40" HorizontalAlignment="Right" Margin="0,1,2,0"
								CommandParameter="{Binding ElementName=root}"
								Command="{Binding ElementName=root, Path=EditTextureListCommand}"/>
					</StackPanel>
					<ListView x:Name="textureList" Grid.Row="1" Grid.Column="1" Style="{StaticResource MarinedProperty}"
							  Height="160" ItemsSource="{Binding TexturePaths}">
						<ListView.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding Path}"/>
							</DataTemplate>
						</ListView.ItemTemplate>
						<ListView.Resources>
							<ContextMenu x:Key="ItemContextMenu">
								<MenuItem Header="Remove"
										  DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"
										  CommandParameter="{Binding}"
										  Command="{Binding TextureListRemoveCommand}"/>
							</ContextMenu>
						</ListView.Resources>
						<ListView.ItemContainerStyle>
							<Style TargetType="{x:Type ListViewItem}">
								<Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
							</Style>
						</ListView.ItemContainerStyle>
					</ListView>
					<Label Grid.Row="2" Grid.Column="0" Content="Speed (FPS)"/>
					<TextBox Grid.Row="2" Grid.Column="1" Style="{StaticResource MarinedProperty}"
						 Text="{Binding Speed, Mode=TwoWay}" VerticalContentAlignment="Center"/>
					<Label Grid.Row="3" Grid.Column="0" Content="Start Index"/>
					<TextBox Grid.Row="3" Grid.Column="1" Style="{StaticResource MarinedProperty}"
						 Text="{Binding StartIndex, Mode=TwoWay}" VerticalContentAlignment="Center"/>
					<Label Grid.Row="4" Grid.Column="0" Content="Flags"/>
					<StackPanel Grid.Row="4" Grid.Column="1" Style="{StaticResource MarinedProperty}">
						<CheckBox Content="Start Playing"
							  IsChecked="{Binding StartPlaying, Mode=TwoWay}"/>
						<CheckBox Content="Looped"
							  IsChecked="{Binding Looped, Mode=TwoWay}"/>
						<CheckBox Content="Flip X"
							  IsChecked="{Binding FlipX, Mode=TwoWay}"/>
						<CheckBox Content="Flip Y"
							  IsChecked="{Binding FlipY, Mode=TwoWay}"/>
					</StackPanel>
					<Label Grid.Row="5" Grid.Column="0" Content="Origin"/>
					<StackPanel Grid.Row="5" Grid.Column="1" Style="{StaticResource MarinedProperty}">
						<WrapPanel Margin="0,0,0,1">
							<TextBox Width="50"
							 Text="{Binding OriginFactorX, Mode=TwoWay, Converter={StaticResource PercentageConverter}}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
							<Label Content="%" Padding="5,3,5,3" Width="24"/>
							<TextBox Width="50"
							 Text="{Binding OriginFactorY, Mode=TwoWay, Converter={StaticResource PercentageConverter}}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
							<Label Content="%" Padding="5,3,5,3"/>
						</WrapPanel>
						<WrapPanel Margin="0,1,0,0">
							<TextBox Width="50" Text="{Binding OriginOffsetX, Mode=TwoWay}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
							<Label Content="px" Padding="5,3,5,3" Width="24"/>
							<TextBox Width="50" Text="{Binding OriginOffsetY, Mode=TwoWay}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
							<Label Content="px" Padding="5,3,5,3"/>
						</WrapPanel>
					</StackPanel>
					<DockPanel Grid.Row="6" Grid.Column="0">
						<CheckBox DockPanel.Dock="Right" VerticalAlignment="Center"
							  IsChecked="{Binding NextGroupEnabled, Mode=TwoWay}"/>
						<Label Content="Next Group" DockPanel.Dock="Left"/>
					</DockPanel>
					<TextBox Grid.Row="6" Grid.Column="1" Style="{StaticResource MarinedProperty}"
						 IsEnabled="{Binding NextGroupEnabled}"
						 Text="{Binding NextGroup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center"/>
				</Grid>
			</ScrollViewer>
		</Grid>
	</DockPanel>
</Window>
